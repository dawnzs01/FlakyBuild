org.gradle.jvmargs=-Xmx2g
kotlin.mpp.stability.nowarn=true
# this is a hack to avoid up-to-date check failures between builds.
# Kotlin JS plugin installs "root package.json" into rootProject/build/js/package.json
#   See https://github.com/JetBrains/kotlin/blob/49f2ac35450578daad49de9341aad4a92fa16c1c/libraries/tools/kotlin-gradle-plugin/src/main/kotlin/org/jetbrains/kotlin/gradle/targets/js/npm/tasks/RootPackageJsonTask.kt#L43
# This means that if different builds run different tasks, e.g.
# Build 1 run `./gradlew check`, all `test` JS configurations are resolved because the frontend tests need to be run,
# Build 2 run `./gradlew server:app:test`, only `main` JS configurations are resolved
# This difference results in different "root package.json", invalidating a lot of subsequent tasks and causing recompilation of a lot of modules.
# To avoid this unexpected up-to-date check failures, we force all modules are installed in "root package.json"
#  by setting idea.sync.active=true.
# See https://github.com/JetBrains/kotlin/blob/96352b9c8c16dce9f9d6c4c68314163583fe0628/libraries/tools/kotlin-gradle-plugin/src/main/kotlin/org/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinProjectNpmResolver.kt#L114
#     https://github.com/JetBrains/kotlin/blob/60ef5b385ae5c548b4e7a1d88d7e712ec54e7ea1/libraries/tools/kotlin-gradle-plugin/src/main/kotlin/org/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolver.kt#L114
#     https://github.com/JetBrains/kotlin/blob/49f2ac35450578daad49de9341aad4a92fa16c1c/libraries/tools/kotlin-gradle-plugin/src/main/kotlin/org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager.kt#L81
#     https://github.com/JetBrains/kotlin/blob/b195d18d2d06426a3e5f186de0049a54e5d85b6c/libraries/tools/kotlin-gradle-plugin/src/main/kotlin/org/jetbrains/kotlin/gradle/internal/idea.kt#L8
#     https://github.com/JetBrains/kotlin @v1.5.10
# It has weird issues with `./gradlew clean buildProductionGameResources`
#systemProp.idea.sync.active=true
org.gradle.caching=true
kotlin.incremental.useClasspathSnapshot=true
