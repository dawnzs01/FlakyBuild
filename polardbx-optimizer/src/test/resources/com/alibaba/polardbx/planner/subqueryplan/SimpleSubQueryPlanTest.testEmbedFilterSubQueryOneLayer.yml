#//
#// 1. 注意：所有SQL后边必须要跟分号";"结尾；
#// 2. 每个plan文件，必须是一个Sql，对应Plan;
#// 3. sql的内容必须另起一行, sql可以分多行写，但必须要以分号结束, "sql:"与sql内容间不能有空行；
#// 4. plan的内容必须另起一行,并放在最后，"plan:"与plan内容间不能有空行；
#// 5. 必须先是写sql, 再写plan, 顺序不能变;
#// 
#
#// @desc 
#// 测试1层嵌套的相关联条件子查询, 子查询的表与外层的表的拆分方式一致
#// 子查询可以下推
- sql: |
    select a.id, a.name
    from 
    	test_hash_tb a 
    where a.id = 5 
    	and 
    		( 
    				a.create_time>'2017-12-12 12:12:12' 
    			or 
    				( 
    					a.id in ( 
    						select id 
    						from test_hash_tb2 b 
    						where b.name = a.name
    					)
    				) 
    		);


  plan: |
    Project(id="id", name="name")
      Filter(condition="create_time > '2017-12-12 12:12:12' OR APPLY_BOOLEAN")
        CorrelateApply(cor=$cor0, leftConditions=[$0], opKind=EQUALS, type=SEMI)
          LogicalView(tables="optest_0001.test_hash_tb", sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`id` = 5)")
          Project($f0="id")
            Filter(condition="name = $cor0.name")
              Gather(concurrent=true)
                LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb2` AS `test_hash_tb2`")
    cache node:

    LogicalView(tables="optest_0001.test_hash_tb", sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`id` = 5)")
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb2` AS `test_hash_tb2`")

- sql: |
    select a.id, a.name
    from
    	test_hash_tb a
    where a.id = 5
    	and
    		(
    				a.create_time>'2017-12-12 12:12:12'
    			or
    				(
    					a.id in (
    						select id
    						from test_hash_tb2 b
    						where b.name = a.name
    							and a.create_time=b.create_time
    					)
    				)
    		);


  plan: |
    Project(id="id", name="name")
      Filter(condition="create_time > '2017-12-12 12:12:12' OR APPLY_BOOLEAN")
        CorrelateApply(cor=$cor0, leftConditions=[$0], opKind=EQUALS, type=SEMI)
          LogicalView(tables="optest_0001.test_hash_tb", sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`id` = 5)")
          Project($f0="id")
            Filter(condition="name = $cor0.name AND $cor0.create_time = create_time")
              Gather(concurrent=true)
                LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb2` AS `test_hash_tb2`")
    cache node:

    LogicalView(tables="optest_0001.test_hash_tb", sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`id` = 5)")
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb2` AS `test_hash_tb2`")

- sql: |
    select a.id, a.name
    from
    	test_hash_tb a
    where a.id = 5
    	and
    		(
    				a.create_time>'2017-12-12 12:12:12'
    			or
    				(
    					a.id in (
    						select id
    						from test_hash_tb4 b
    						where b.name = a.name
    					)
    				)
    		);


  plan: |
    Project(id="id", name="name")
      Filter(condition="create_time > '2017-12-12 12:12:12' OR APPLY_BOOLEAN")
        CorrelateApply(cor=$cor0, leftConditions=[$0], opKind=EQUALS, type=SEMI)
          LogicalView(tables="optest_0001.test_hash_tb", sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`id` = 5)")
          Project($f0="id")
            Filter(condition="name = $cor0.name")
              Gather(concurrent=true)
                LogicalView(tables="[0000-0003].test_hash_tb4_[0,1]", shardCount=8, sql="SELECT `id`, `name` FROM `test_hash_tb4` AS `test_hash_tb4`")
    cache node:

    LogicalView(tables="optest_0001.test_hash_tb", sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`id` = 5)")
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].test_hash_tb4_[0,1]", shardCount=8, sql="SELECT `id`, `name` FROM `test_hash_tb4` AS `test_hash_tb4`")

- sql: |
    #// @desc
    #// 测试1层嵌套的相关联条件子查询, 子查询的表与外层的表的拆分方式一致,
    #// 有多个相关联列, 但关联列不含有拆分键
    #// , 所以子查询不能下推, 目前查询报错："mismatched type $9 INTEGER"
    select a.id, a.name
    from
      test_hash_tb a
    where a.id = 5
      and
        (
            a.create_time>'2017-12-12 12:12:12'
          or
            (
              a.name in (
                select name
                from test_hash_tb2 b
                where a.create_time=b.create_time
              )
            )
        );


  plan: |
    Project(id="id", name="name")
      Filter(condition="create_time > '2017-12-12 12:12:12' OR APPLY_BOOLEAN")
        CorrelateApply(cor=$cor0, leftConditions=[$1], opKind=EQUALS, type=SEMI)
          LogicalView(tables="optest_0001.test_hash_tb", sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`id` = 5)")
          Project($f0="name")
            Filter(condition="$cor0.create_time = create_time")
              Gather(concurrent=true)
                LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `name`, `create_time` FROM `test_hash_tb2` AS `test_hash_tb2`")
    cache node:

    LogicalView(tables="optest_0001.test_hash_tb", sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`id` = 5)")
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `name`, `create_time` FROM `test_hash_tb2` AS `test_hash_tb2`")
