-
  sql: |
    /*+TDDL:HASH_JOIN(t_shard_id1,t_shard_id2)*/
    select t_shard_id1.id from t_shard_id1, t_shard_id2 where t_shard_id1.name = t_shard_id2.name order by t_shard_id1.id;

  plan: |

    Project(id="id")
      HashJoin(condition="name = name", type="inner")
        MergeSort(sort="id ASC")
          LogicalView(tables="[0000-0003].t_shard_id1", shardCount=4, sql="SELECT `id`, `name` FROM `t_shard_id1` AS `t_shard_id1` ORDER BY `id`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].t_shard_id2", shardCount=4, sql="SELECT `name` FROM `t_shard_id2` AS `t_shard_id2`")

-
  sql: |
    /*+TDDL:HASH_JOIN(t_shard_id2,t_shard_id1)*/
    select t_shard_id1.id from t_shard_id1, t_shard_id2 where t_shard_id1.name = t_shard_id2.name order by t_shard_id2.id;

  plan: |

    Project(id="id0")
      HashJoin(condition="name = name", type="inner")
        MergeSort(sort="id ASC")
          LogicalView(tables="[0000-0003].t_shard_id2", shardCount=4, sql="SELECT `id`, `name` FROM `t_shard_id2` AS `t_shard_id2` ORDER BY `id`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].t_shard_id1", shardCount=4, sql="SELECT `id`, `name` FROM `t_shard_id1` AS `t_shard_id1`")

-
  sql: |
    /*+TDDL:HASH_JOIN(t_shard_id1,t_shard_id2)*/
    select t_shard_id1.id from t_shard_id1, t_shard_id2 where t_shard_id1.name = t_shard_id2.name order by t_shard_id2.id, t_shard_id1.id;

  plan: |

    Project(id="id")
      MemSort(sort="id0 ASC,id ASC")
        Project(id="id", id0="id0")
          HashJoin(condition="name = name", type="inner")
            Gather(concurrent=true)
              LogicalView(tables="[0000-0003].t_shard_id1", shardCount=4, sql="SELECT `id`, `name` FROM `t_shard_id1` AS `t_shard_id1`")
            Gather(concurrent=true)
              LogicalView(tables="[0000-0003].t_shard_id2", shardCount=4, sql="SELECT `id`, `name` FROM `t_shard_id2` AS `t_shard_id2`")

-
  sql: |
    /*+TDDL:HASH_JOIN(t_one,t_two)*/
    select a.id from (select id, name from t_one) a left join ( select name from t_two where id = 2 group by name ) b  on a.name = b.name order by a.id limit 10, 10;

  plan: |

    Project(id="id")
      HashJoin(condition="name = name", type="left")
        MergeSort(sort="id ASC", offset=10, fetch=10)
          LogicalView(tables="[0000-0003].t_one", shardCount=4, sql="SELECT `id`, `name` FROM `t_one` AS `t_one` ORDER BY `id` LIMIT 20")
        LogicalView(tables="optest_0002.t_two", sql="SELECT `name` FROM `t_two` AS `t_two` WHERE (`id` = 2) GROUP BY `name`")
    
-
  sql: |
    /*+TDDL:HASH_OUTER_JOIN(t_one,t_two)*/
    select a.id from (select id, name from t_one where id = 1) a left join ( select name from t_two where id = 2 group by name ) b  on a.name = b.name order by a.id limit 10, 10;

  plan: |

    topn(sort="id asc", offset=10, fetch=10)
      project(id="id")
        hashjoin(condition="name = name", type="left", build="left")
          logicalview(tables="optest_0001.t_one", sql="select `id`, `name` from `t_one` as `t_one` where (`id` = 1)")
          logicalview(tables="optest_0002.t_two", sql="select `name` from `t_two` as `t_two` where (`id` = 2) group by `name`")

- sql: |
    select a.id from (select id, name from t_one) a left join ( select name from t_two where id = 2 group by name ) b  on a.name = b.name order by a.id limit 10, 10;

  plan: |
    project(id="id")
      hashjoin(condition="name = name", type="left")
        mergesort(sort="id asc", offset=10, fetch=10)
          logicalview(tables="[0000-0003].t_one", shardcount=4, sql="select `id`, `name` from `t_one` as `t_one` order by `id` limit 20")
        logicalview(tables="optest_0002.t_two", sql="select `name` from `t_two` as `t_two` where (`id` = 2) group by `name`")
